{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","this","window","setInterval","setState","console","info","prevProps","name","props","debug","className","toLocaleTimeString","Component","getRandomName","value","now","toString","slice","App","hasClock","clockName","document","addEventListener","e","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,uDAKE,WAAqB,IAAD,OACVD,EAAUE,KAAKH,MAAfC,MAERG,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEL,MAAO,IAAIC,OAE3BK,QAAQC,KAAKP,KACZ,OAZP,gCAeE,SAAmBQ,GACjB,IAAQC,EAASP,KAAKQ,MAAdD,KAEJD,EAAUC,OAASA,GACrBH,QAAQK,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDA,MAnBzD,oBAuBE,WACE,IAAQA,EAASP,KAAKQ,MAAdD,KACAT,EAAUE,KAAKH,MAAfC,MAER,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAGF,YAED,sBAAMG,UAAU,cAAhB,SACGZ,EAAMa,8BApCjB,GAA2BC,aCF3B,SAASC,IACP,IAAMC,EAAQf,KAAKgB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAGX,IAAMI,EAAb,4MACErB,MAAQ,CACNsB,UAAU,EACVC,UAAW,WAHf,uDAME,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAEC,iBAEF,EAAKrB,SAAS,CAAEgB,UAAU,OAG5BE,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEgB,UAAU,OAG5BlB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEiB,UAAWP,QAC1B,QAnBP,oBAsBE,WACE,MAAgCb,KAAKH,MAA7BsB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKV,UAAU,MAAf,UACE,6CACCS,GAAY,cAAC,EAAD,CAAOZ,KAAMa,WA5BlC,GAAyBR,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.fc46073a.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  componentDidMount() {\n    const { today } = this.state;\n\n    window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      console.info(today);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      console.debug(`Renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  render() {\n    const { name } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (e) => {\n      e.preventDefault();\n\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}